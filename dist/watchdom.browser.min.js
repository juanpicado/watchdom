var domWatcher =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var WatchDom = __webpack_require__(1);
	module.exports = function () {
	    return new (Function.prototype.bind.call(WatchDom, null, []))();
	};

/***/ },
/* 1 */
/***/ function(module, exports) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	/* globals HTMLElement, MutationObserver */

	function isElement(o) {
	    return (typeof HTMLElement === 'undefined' ? 'undefined' : _typeof(HTMLElement)) === 'object' ? o instanceof HTMLElement : o && (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === 'object' && o !== null && o.nodeType === 1 && typeof o.nodeName === 'string';
	}

	var WatchDom = function WatchDom() {
	    var _this = this;
	    this._notifycb = [];
	    this.observer = new MutationObserver(function (mutations) {
	        mutations.forEach(function (mutation) {
	            if (_this._notifycb.length > 0) {
	                _this._notifycb.map(function (cb) {
	                    cb(mutation);
	                });
	            }
	        });
	    });
	    return this;
	};

	WatchDom.prototype = {
	    observe: function observe(element, options) {
	        options = options || { attributes: true, childList: true, characterData: true };
	        if (arguments.length > 0 && isElement(element)) {
	            this.observer.observe(element, options);
	        }
	        return this;
	    },
	    stop: function stop() {
	        this.observer.disconnect();
	        return this;
	    },
	    notify: function notify(cb) {
	        if (typeof cb === 'function') {
	            this._notifycb.push(cb.bind(this));
	        }
	        return this;
	    }
	};

	module.exports = WatchDom;

/***/ }
/******/ ]);